{"version":3,"file":"static/js/658.6c63baa0.chunk.js","mappings":"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","sources":["webpack://tiktok/./src/pages/Default/Following/Following.module.css?d3a6","webpack://tiktok/./src/pages/Common/Videos/SuggestedVideo/SuggestedVideo.module.css?c7d7","pages/Common/Videos/SuggestedVideo/SuggestedVideo.js","pages/Default/Following/Following.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Following_wrapper__CM28J\",\"list-video-container\":\"Following_list-video-container__QdPPR\"};","// extracted by mini-css-extract-plugin\nexport default {\"video-container\":\"SuggestedVideo_video-container__y-hVQ\",\"link\":\"SuggestedVideo_link__jX2fr\",\"video-wrapper\":\"SuggestedVideo_video-wrapper__uqt0u\",\"video\":\"SuggestedVideo_video__2qxsg\",\"info-container\":\"SuggestedVideo_info-container__xVp88\",\"avatar\":\"SuggestedVideo_avatar__Xq5GR\",\"img\":\"SuggestedVideo_img__wPA0c\",\"userName\":\"SuggestedVideo_userName__C+ToP\",\"name\":\"SuggestedVideo_name__lxu4q\",\"span\":\"SuggestedVideo_span__CM323\",\"check\":\"SuggestedVideo_check__L8ajZ\",\"button\":\"SuggestedVideo_button__4sUC6\"};","import { FaCircleCheck } from 'react-icons/fa6'\r\n\r\nimport config from '../../../../config';\r\nimport Image from '../../../../component/Image/Image';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './SuggestedVideo.module.css'\r\nimport WrapperAuth from '../../../../component/WrapperAuth';\r\n\r\nfunction SuggestedVideo({ user }) {\r\n\r\n\r\n    const handleVideoPlay = (e) => {\r\n        e.target.play();\r\n    };\r\n\r\n    const handleVideoPause = (e) => {\r\n        e.target.pause();\r\n        e.target.currentTime = 0;\r\n    };\r\n\r\n    return (\r\n        <div className={styles['video-container']} >\r\n            <div className={styles.link}>\r\n                <Link\r\n                    to={config.profileLink(user.userName)}\r\n                    target='_blank'\r\n                    className={styles['video-wrapper']}\r\n                >\r\n                    {user.popularVideo && <video\r\n                        className={styles.video}\r\n                        src={user.popularVideo.fileUrl}\r\n                        muted\r\n                        loop\r\n                        onMouseEnter={handleVideoPlay}\r\n                        onMouseLeave={handleVideoPause}\r\n                        poster={user.popularVideo.thumb_url}\r\n                    />\r\n                    }\r\n                </Link>\r\n                <div className={styles['info-container']}>\r\n                    <Link\r\n                        to={config.profileLink(user.userName)}\r\n                        target='_blank'\r\n                    >\r\n                        <span className={styles.avatar}>\r\n                            <Image alt='avatar' src={user.avatar} className={styles.img} />\r\n                        </span>\r\n                        <h3 className={styles.userName}>{user.userName}</h3>\r\n                        <h4 className={styles.name}>\r\n                            <span className={styles.span}> {user.name}</span>\r\n                            {true && < FaCircleCheck className={styles.check} />}\r\n                        </h4>\r\n                    </Link>\r\n                    <WrapperAuth>\r\n                        <button className={styles.button} >Follow</button>\r\n                    </WrapperAuth>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestedVideo","import { useQuery } from '@tanstack/react-query';\r\nimport { useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport styles from './Following.module.css'\r\nimport * as usersService from \"../../../services/user/usersService\";\r\nimport Loader from '../../../component/Loader';\r\nimport ListVideos from '../../Common/Videos/ListVideos'\r\nimport { getUser } from '../../../hooks/auth/user.localstore';\r\nimport SuggestedVideo from '../../Common/Videos/SuggestedVideo';\r\n\r\nfunction Following() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const userCurrent = getUser()?.data\r\n\r\n    const query = useQuery({\r\n        queryKey: ['userRecommend'],\r\n        queryFn: async () => {\r\n            const data = await usersService.suggestedList(page, 15)\r\n            if (data.length  < 30) {\r\n                setHasMore(false);\r\n            }\r\n            setUsers(data)\r\n            return users\r\n        }\r\n    })\r\n\r\n    const fetchListVideo = async () => {\r\n        const result = await usersService.suggestedList(page, 15);\r\n        return result;\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        const listVideoNext = await fetchListVideo();\r\n\r\n        setUsers([...users, ...listVideoNext]);\r\n        if (listVideoNext.length === 0) {\r\n            setHasMore(false);\r\n        }\r\n        setPage((prev) => prev + 1);\r\n    };\r\n\r\n    if (query.isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {!userCurrent\r\n                ? <InfiniteScroll\r\n                    dataLength={users.length}\r\n                    next={fetchData}\r\n                    hasMore={hasMore}\r\n                    loader={<Loader />}\r\n                    endMessage={<h4>Yay! You have seen it all</h4>}\r\n                    style={{ overflow: \"inherit\" }}\r\n                >\r\n                    <div className={styles['list-video-container']}>\r\n                        {users?.map((user) => (\r\n                            <SuggestedVideo key={user.id} user={user} />\r\n                        ))}\r\n                    </div >\r\n                </InfiniteScroll>\r\n                : <ListVideos type=\"following\" />}\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Following;"],"names":["_ref","user","_jsx","className","styles","children","_jsxs","Link","to","config","profileLink","userName","target","popularVideo","src","fileUrl","muted","loop","onMouseEnter","e","play","onMouseLeave","pause","currentTime","poster","thumb_url","Image","alt","avatar","name","FaCircleCheck","WrapperAuth","_getUser","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","hasMore","setHasMore","_useState5","_useState6","page","setPage","userCurrent","getUser","data","query","useQuery","queryKey","queryFn","_queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","usersService","sent","length","abrupt","stop","apply","arguments","fetchListVideo","_callee2","result","_context2","fetchData","_ref2","_callee3","listVideoNext","_context3","concat","_toConsumableArray","isLoading","Loader","ListVideos","type","InfiniteScroll","dataLength","loader","endMessage","style","overflow","map","SuggestedVideo","id"],"sourceRoot":""}